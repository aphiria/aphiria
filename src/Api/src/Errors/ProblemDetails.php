<?php

/**
 * Aphiria
 *
 * @link      https://www.aphiria.com
 * @copyright Copyright (C) 2019 David Young
 * @license   https://github.com/aphiria/aphiria/blob/master/LICENSE.md
 */

declare(strict_types=1);

namespace Aphiria\Api\Errors;

/**
 * Defines standard problem details that conform to RFC 7807
 * @link https://tools.ietf.org/html/rfc7807
 */
class ProblemDetails
{
    /**
     * A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when
     * dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML
     * [W3C.REC-html5-20141028]). When this member is not present, its value is assumed to be "about:blank".
     *
     * @link https://tools.ietf.org/html/rfc7807#section-3.1
     * @var string|null
     */
    public ?string $type;
    /**
     * A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence of the
     * problem, except for purposes of localization(e.g., using proactive content negotiation; see[RFC7231], Section 3.4).
     *
     * @link https://tools.ietf.org/html/rfc7807#section-3.1
     * @var string|null
     */
    public ?string $title;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     *
     * @link https://tools.ietf.org/html/rfc7807#section-3.1
     * @var string|null
     */
    public ?string $detail;
    /**
     * The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
     *
     * @link https://tools.ietf.org/html/rfc7807#section-3.1
     * @var int|null
     */
    public ?int $status;
    /**
     * A URI reference that identifies the specific occurrence of the problem.It may or may not yield further
     * information if dereferenced.
     *
     * @link https://tools.ietf.org/html/rfc7807#section-3.1
     * @var string|null
     */
    public ?string $instance;

    /**
     * @param string|null $type The optional problem details type
     * @param string|null $title The optional problem details title
     * @param string|null $detail The optional problem details
     * @param int|null $status The optional problem details status
     * @param string|null $instance The optional problem details instance
     */
    public function __construct(
        string $type = null,
        string $title = null,
        string $detail = null,
        int $status = null,
        string $instance = null
    ) {
        $this->type = $type;
        $this->title = $title;
        $this->detail = $detail;
        $this->status = $status;
        $this->instance = $instance;
    }
}
